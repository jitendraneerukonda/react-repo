{"version":3,"sources":["data/emojiuser.svg","components/Resume.js","components/Career.js","components/Education.js","components/Techskills.js","components/Cert.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Resume","props","fetch","then","res","json","data","console","log","info","profiles","location","profilesData","i","basic","className","class","to","pathname","Career","response","href","Education","Techskills","Cert","Home","profile","map","value","index","key","src","emojiuser","style","width","name","role","phone","email","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8868c27c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emojiuser.714b4c88.svg\";","import React from 'react';\r\nimport data from \"../data/data.json\";\r\nimport emojiuser from '../data/emojiuser.svg';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Resume(props) {\r\n\tfetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n\t.then(res=>res.json())\r\n\t.then(data=>console.log(data))\r\n\r\n\tlet info=data.profiles[props.location.profilesData.i]\r\n\tconsole.log(info.basic)\r\n\r\n\treturn (\r\n    <div className=\"navigation\">\r\n      <nav class=\"navbar navbar-expand-sm bg-light\">\r\n        <ul>\r\n          <Link to={{pathname:'/'}} className=\"inner\">Home</Link>\r\n          <Link to={{pathname:'/career'}} className=\"inner\">Career</Link>\r\n          <Link to={{pathname:'/education'}} className=\"inner\">Education</Link>\r\n          <Link to={{pathname:'/tech'}} className=\"inner\">Technical Skills</Link>\r\n          <Link to={{pathname:'/cert'}} className=\"inner\">Certification</Link>\r\n        </ul>\r\n      </nav> \r\n      <h2>Please Click on the navigation Buttons to see my details</h2>   \r\n    </div>\r\n    \r\n\t)\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Career(props) {\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then(response=>response.json())\r\n        .then(data=>console.log(data))\r\n\r\n    return (\r\n        <div className=\"navigation\">\r\n            \r\n             <nav>\r\n                <h1 className=\"brand\">\r\n                    <a href=\"/\">HOME</a>\r\n                    </h1>\r\n            </nav>\r\n         <div className=\"row justify-content-center\">\r\n            \r\n            <div className=\"col-lg-8 m-2 data-card\">\r\n                <div className=\"card \">\r\n                    <div className=\"card-body \">\r\n                        <h2>Career Objective:</h2>\r\n                        <h4> I want to be a SE</h4>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Education(props) {\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then(response=>response.json())\r\n        .then(data=>console.log(data))\r\n    return (\r\n        <div className=\"navigation\">\r\n            \r\n             <nav>\r\n                <h1 className=\"brand\">\r\n                    <a href=\"/\">HOME</a>\r\n                    </h1>\r\n            </nav>\r\n         <div className=\"row justify-content-center\">\r\n            \r\n\r\n            <div className=\"col-lg-8 m-2 data-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h2>Education Details:</h2>\r\n                        <br/>\r\n            <table className=\"table\">\r\n                 <thead>\r\n                    <tr>\r\n                        <th>Course</th>\r\n                        <th>Name of the Institution</th>\r\n                        <th>Year of Passing</th>\r\n                        <th>Percentage</th>\r\n                    </tr>\r\n                 </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>B.tech (C.S.E)</td>\r\n                        <td>VVIT</td>\r\n                        <td>2020</td>\r\n                        <td>70</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Intermediate</td>\r\n                        <td>Bhashyam</td>\r\n                        <td>2016</td>\r\n                        <td>95</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>S.S.C</td>\r\n                        <td>Bhashyam</td>\r\n                        <td>2014</td>\r\n                        <td>97</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Techskills(props) {\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then(response=>response.json())\r\n        .then(data=>console.log(data))\r\n    return (\r\n        <div className=\"navigation\">\r\n            \r\n             <nav>\r\n                <h1 className=\"brand\">\r\n                    <a href=\"/\">HOME</a>\r\n                    </h1>\r\n            </nav>\r\n         <div className=\"row justify-content-center\">\r\n           \r\n             <div className=\"col-lg-8 m-2 data-card\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"\">\r\n                        <h2 className=\"blink\">Technical Skills:</h2>\r\n                        <ul>\r\n                        <h4>Web Development:</h4>\r\n                        <h6>HTML,CSS,Bootstrap,React Js</h6>\r\n                        <h4>Databases:</h4>\r\n                        <h6> MYSQL</h6>\r\n                        <h4>Operating Systems:</h4>\r\n                        <h6>Linux,Ubuntu,Windows</h6>\r\n                    </ul>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Cert(props) {\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then(response=>response.json())\r\n        .then(data=>console.log(data))\r\n\r\n    return (\r\n        <div className=\"navigation\">\r\n            \r\n             <nav>\r\n                <h1 className=\"brand\">\r\n                    <a href=\"/\">HOME</a>\r\n                    </h1>\r\n            </nav>\r\n         <div className=\"row justify-content-center\">\r\n            \r\n\r\n            <div className=\"col-lg-8 m-2 data-card\">\r\n                <div className=\"card \">\r\n                    <div className=\"card-body\">\r\n                  <h2>Certifications:</h2>\r\n                            <h4>Web Development using React Js from Apssdc</h4>\r\n                            <h4>Android certification from Apssdc</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport emojiuser from './data/emojiuser.svg';\nimport './App.css';\nimport data from \"./data/data.json\";\nimport Resume from \"./components/Resume\";\nimport Career from './components/Career';\nimport Education from './components/Education';\nimport Techskills from './components/Techskills';\nimport Cert from './components/Cert';\nimport {BrowserRouter,Route, Link} from 'react-router-dom';\n\nfunction App() {\n  return(\n    <div className = \"App\">\n      <BrowserRouter>\n        <Route exact path =\"/\" component={Home}/>\n        <Route path =\"/resume\" component={Resume}/>\n        <Route exact path='/career' component={Career} />\n        <Route exact path='/education' component={Education} />\n        <Route exact path='/tech' component={Techskills} />\n        <Route exact path='/cert' component={Cert} />\n      </BrowserRouter>\n    </div> \n  );\n}\n\nlet Home=()=>{\n  let profile=data.profiles;\n  console.log(profile);\n\n  return(\n    <div className=\"row justify-content-center\">\n      {\n        profile.map((value,index)=>(\n          <div className=\"col-sm-10 col-md-4 col-lg-4 mt-1\" key={index}>\n              <div className=\"card\" >\n                <div className=\"card-body\">\n                  <img src={emojiuser} style={{width:\"200px\"}}/>\n                  <h2>{value.basic.name}</h2>\n                  <h2>{value.basic.role}</h2>\n                  <h2>{value.basic.phone}</h2>\n                  <h2>{value.basic.email}</h2>\n\n                  <Link to={{pathname:\"/resume\", profilesData:{i:index}}} className=\"btn btn-primary\">Profile</Link>\n\n                </div>\n\n              </div>\n          </div>\n          ))\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    \t<App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}